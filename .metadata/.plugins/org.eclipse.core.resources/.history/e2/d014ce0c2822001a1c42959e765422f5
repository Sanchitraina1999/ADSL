//============================================================================
// Name        : 01BinaryTree.cpp
// Author      : Sanchit Raina
// Version     :
// Copyright   : https://www.github.com/Sanchitraina1999/ADSL
// Description : Hello World in C++, Ansi-style
//============================================================================

/*
 Given binary tree with n nodes and perform following operations on
it.
a) Assign this tree to another [operator=]
b) Erase all nodes in a binary tree
c) Create a mirror image of the tree
d) Check two binary trees are equal or not
e) Inorder, Preorder, Postorder traversal of tree(recursive and
non-recursive)
f) Print internal and leaf nodes
 */


#include <iostream>
using namespace std;

class node{
public:
	int data;
	node *left,*right;
	node(){
		data=0;
		left=NULL;
		right=NULL;
	}
};

class Tree{
	node *root;
public:
	Tree(){
		root = NULL;
	}
	void create();
	void copyTree();
	void mirrorImage();
	void equal(Tree);
	void preorderRecursive();
	void preorderNonRecursive();
	void inorderRecursive();
	void inorderNonRecursive();
	void postorderRecursive();
	void postorderNonRecursive();
	void display();
};


int main() {
	Tree t;
start:
	cout<<"\nMAIN MENU";
	cout<<"\n1. Enter a binary tree";
	cout<<"\n2. Assign this tree to another tree";
	cout<<"\n3. Create a mirror image of the tree";
	cout<<"\n4. Check two binary trees are equal or not";
	cout<<"\n5. Tree Traversals";
	cout<<"\n6. Print internal and leaf nodes";
	cout<<"\n Enter your choice";
	int choice; 	cin>>choice;
	switch(choice){
	case 1:
		t.create();
		break;
	case 2:
		t.copyTree();
		break;
	case 3:
		t.mirrorImage();
		break;
	case 4:
		cout<<"\nANOTHER binary tree you want to check with given Binary tree";
		Tree t1;
		t1.create();
		t.equal(t1);
		break;
	case 5:
		cout<<"\n\t\tTREE TRAVERSALS";
		cout<<"\n\t\t1. Preorder Recursive";
		cout<<"\n\t\t2. Preorder Non-Recursive";
		cout<<"\n\t\t3. Inorder Recursive";
		cout<<"\n\t\t4. Inorder Non-Recursive";
		cout<<"\n\t\t5. Postorder Recursive";
		cout<<"\n\t\t6. Postorder Non-Recursive";
		cout<<"\n Enter your choice";
		int choice1;	cin>>choice1;
		switch(choice1){
			case 1:
				t.preorderRecursive();
				break;
			case 2:
				t.preorderNonRecursive();
				break;
			case 3:
				t.inorderRecursive();
				break;
			case 4:
				t.inorderNonRecursive();
				break;
			case 5:
				t.postorderRecursive();
				break;
			case 6:
				t.postorderNonRecursive();
				break;
			default:
				cout<<"\nNo such option for traversal !";
		}
		break;
	case 6:
		t.display();
		break;
	default:
		cout<<"\nNo such option in Main Menu !";
	}
	goto start;
	return 0;
}
